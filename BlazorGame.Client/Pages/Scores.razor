@page "/scores"
@using SharedModels
@inject NavigationManager NavigationManager
<link rel="stylesheet" href="css/Scores.css" />
<div class="scores-page-container">
    <div class="background-overlay"></div>
    <div class="scores-container">
        <img src="images/logo.png" alt="Logo" class="scores-logo" />
        <h3>Mes Scores et Historique</h3>

        @if (HighScores == null || GameHistories == null)
        {
            <p>Chargement...</p>
        }
        else
        {
            <section class="scores-section">
                <h4>Mes Meilleurs Scores</h4>
                @if (HighScores.Count == 0)
                {
                    <p>Aucun score enregistré.</p>
                }
                else
                {
                    <table class="scores-table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Score</th>
                                <th>Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var score in HighScores.OrderByDescending(s => s.Score))
                            {
                                <tr>
                                    <td>@score.Id</td>
                                    <td>@score.Score</td>
                                    <td>@score.DateAchieved.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </section>

            <section class="history-section">
                <h4>Historique des Parties</h4>
                @if (GameHistories.Count == 0)
                {
                    <p>Aucune partie jouée pour le moment.</p>
                }
                else
                {
                    @foreach (var history in GameHistories.OrderByDescending(h => h.DatePlayed))
                    {
                        <div class="history-card">
                            <p><strong>Date :</strong> @history.DatePlayed.ToString("dd/MM/yyyy HH:mm")</p>
                            <p><strong>Donjons complétés :</strong> @history.CompletedDungeons.Count</p>
                            <ul>
                                @foreach (var dungeon in history.CompletedDungeons)
                                {
                                    <li>@dungeon.Name - @dungeon.Description</li>
                                }
                            </ul>
                        </div>
                    }
                }
            </section>
        }
    </div>
</div>


@code {
    private List<HighScore> HighScores = new();
    private List<GameHistory> GameHistories = new();

    protected override void OnInitialized()
    {
        var player = new Player { Username = "Joueur1" };

        HighScores = new List<HighScore>
        {
            new HighScore() {
                Id = 1,
                Player = player,
                Score = 1200,
            },
            new HighScore() {
                Id = 2,
                Player = player,
                Score = 950,
            },
            new HighScore() {
                Id = 3,
                Player = player,
                Score = 1500,
            }
        };

        GameHistories = new List<GameHistory>
        {
            new GameHistory() {
                Id = 1,
                Player = player,
                CompletedDungeons = new List<Dungeon> {
                    new Dungeon { Name = "Donjon de Feu", Description = "Un donjon brûlant." },
                    new Dungeon { Name = "Donjon de Glace", Description = "Un donjon gelé." }
                }
            },
            new GameHistory() {
                Id = 2,
                Player = player,
                CompletedDungeons = new List<Dungeon> {
                    new Dungeon { Name = "Forêt Maudite", Description = "Le fantôme de la forêt." }
                }
            }
        };

    }
}