@page "/LoginForm"
@inject NavigationManager NavigationManager
@inject IAccessTokenProvider TokenProvider

<div class="login-page-container">
    <div class="login-overlay"></div>
    <div class="login-container">
        <img src="images/logo.png" alt="Logo" class="login-logo" />
        <h3>Connexion</h3>

        <label>Nom d'utilisateur</label>
        <input @bind="Username" placeholder="Utilisateur" />

        <label>Mot de passe</label>
        <div class="password-wrapper">
            <input @bind="Password" placeholder="Mot de passe" type="@PasswordInputType" aria-label="Mot de passe" />
            <div class="eye-container" @onclick="TogglePasswordVisibility" title="@ToggleButtonTitle"
                 aria-pressed="@ShowPassword">
                @if (ShowPassword)
                {
                    <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                         aria-hidden="true">
                        <path d="M2 2l20 20" stroke="white" stroke-width="2" stroke-linecap="round"
                              stroke-linejoin="round" />
                        <path
                            d="M17.94 17.94C16.06 19.09 14.06 19.5 12 19.5 7 19.5 3.11 16.36 1.5 12c.83-2.02 2.12-3.77 3.77-5.14"
                            stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                        <path d="M9.88 9.88A3 3 0 0 0 14.12 14.12" stroke="white" stroke-width="2" stroke-linecap="round"
                              stroke-linejoin="round" />
                    </svg>
                }
                else
                {
                    <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"
                         aria-hidden="true">
                        <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7S1 12 1 12z" stroke="white" stroke-width="2"
                              stroke-linecap="round" stroke-linejoin="round" />
                        <circle cx="12" cy="12" r="3" stroke="white" stroke-width="2" stroke-linecap="round"
                                stroke-linejoin="round" />
                    </svg>
                }
            </div>
        </div>

        <button @onclick="DoLogin">Se connecter</button>

        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <p class="error">@ErrorMessage</p>
        }
    </div>
</div>

<style scoped>
@@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

html, body {
    margin: 0;
    padding: 0;
    height: 100%;
    width: 100%;
    font-family: 'Press Start 2P', cursive;
    background-image: url("images/aventure.jpg");
    background-size: cover;
    background-position: center;
    color: white;
    overflow: hidden;
}

.login-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.25);
    z-index: 0;
}

.login-page-container {
    position: relative;
    height: 100vh;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
}

.login-container {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
    padding: 2rem;
    border-radius: 16px;
    background: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(12px);
    -webkit-backdrop-filter: blur(12px);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    width: 320px;
    max-width: 90%;
    text-align: center;
}

.login-container h3 {
    font-size: 1.5rem;
    color: #fff;
    text-shadow: 0 2px 5px rgba(0, 0, 0, 0.7);
}

.login-container input {
    width: 100%;
    padding: 0.6rem 1rem;
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.4);
    background: rgba(255, 255, 255, 0.2);
    color: #fff;
    outline: none;
    box-sizing: border-box;
}

.password-wrapper {
    position: relative;
    width: 100%;
}

.password-wrapper input {
    width: 100%;
    padding-right: 2.5rem;
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.4);
    background: rgba(255, 255, 255, 0.2);
    color: #fff;
    outline: none;
    box-sizing: border-box;
}

.eye-container {
    position: absolute;
    right: 8px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    background: none;
    border: none;
    padding: 0;
}

.eye-container svg path,
.eye-container svg circle {
    stroke: white;
    transition: stroke 0.2s;
}

.eye-container:hover svg path,
.eye-container:hover svg circle {
    stroke: #336326;
}

.login-container button {
    padding: 0.6rem 1.2rem;
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.4);
    background: rgba(255, 255, 255, 0.2);
    color: #fff;
    cursor: pointer;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    transition: transform 0.2s, background-color 0.3s, box-shadow 0.3s;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
}

.login-container button:hover {
    background: rgba(255, 255, 255, 0.35);
    transform: scale(1.05);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.5);
}

.login-logo {
    width: 120px;
    height: auto;
    margin-bottom: 1rem;
}

.error {
    color: #ffcccc;
    font-size: 0.8rem;
}
</style>

@code {
    private string Username = "";
    private string Password = "";
    private string ErrorMessage = "";
    private bool ShowPassword = false;
    private string PasswordInputType => ShowPassword ? "text" : "password";
    private string ToggleButtonTitle => ShowPassword ? "Masquer le mot de passe" : "Afficher le mot de passe";

    private void TogglePasswordVisibility()
    {
        ShowPassword = !ShowPassword;
    }

    private void DoLogin()
    {
        NavigationManager.NavigateTo("/Room1");
    }

    private class TokenResponse
    {
        public string access_token { get; set; } = "";
        public string refresh_token { get; set; } = "";
        public string token_type { get; set; } = "";
        public int expires_in { get; set; }
    }
}